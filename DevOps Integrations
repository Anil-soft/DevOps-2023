Jenkins stages:-

build, deploy, test and release.

How to integrate git with jenkins?
  * manage jenkins -> manage plugins -> install github
  
How to integrate maven with jenkins?
  - install maven packages on jenkins server
  - edit the bashrc file with home path variables
  - M2_HOME=/opt/maven
  - M2=/opt/maven/bin
  - JAVA_HOME=/usr/lib/jvm/<jdk>

Maven Lifecycle:- 
Validate: This step validates if the project structure is correct. For example â€“ It checks if all the dependencies have been downloaded and are available in the local repository.
Compile: It compiles the source code, converts the .java files to .class, and stores the classes in the target/classes folder.
Test: It runs unit tests for the project.
Package: This step packages the compiled code in a distributable format like JAR or WAR.
Integration test: It runs the integration tests for the project.
Verify: This step runs checks to verify that the project is valid and meets the quality standards.
Install: This step installs the packaged code to the local Maven repository.
Deploy: It copies the packaged code to the remote repository for sharing it with other developers.
  
  * install the maven integration plugin
  - manage jenkins -> global tool configuration -> specify the java and maven home paths
  
How to integrate tomcat with jenkins?
 - install the deploy to container plugin
 - need to configure tomact credentials on jenkins
 - manage jenkins -> manage credentials -> jenkins -> global credentials -> add credentials
 * while configuring the maven job at the post build actions have to choose deploy to container
 
poll SCM - it will check changes periodically as per defined cronjob, if any changes will occur then it will get triggered

How to integrate docker with jenkins?
 - manager jenkins -> configure system -> at publish over SSH add the server details { hostname, private ip, username password or private key }
   * while configuring the jenkins job at post-build actions select the send build artifacts over SSH
   
How to integrate ansible with jenkins?
 - manager jenkins -> configure system -> at publish over SSH add the server details { hostname, priver ip, username password or private key }
   * while configuring the jenkins job at post-build actions select the send build artifacts over SSH

* How to integrate ansible through jenkins

  Step:-1
  - Manage Jenkins -> Manage Plugins -> download the ansible plugin
  
  Step:-2
  - Global Tool Configuration -> Ansible (ansible installations)-> give the path where ansible should be executed (/usr/bin/ansible)
  
  Step:- 2
  Create the Pipeline job and wirte the pipeline script
  
  pipeline{
  agent any
  stages{
       stage ('SCM Checkout'){
            steps{
                git '<github-repo>'
            }
       }
       stage ('Execute Ansible'){
             steps{
                  ansiblePlaybook credentailsID: 'private-key', disableHostKeyChecking: true, installation: 'ansible2', inventory: 'dev.inv', playbook: 'apache.yaml,
             }
       }
  }
}


* war files would be placed under { "/var/lib/jenkins/workspace/pipeline_job/webapp/target" }
* war file should be copied under on tomact server { "/opt/apache-maven-8.5.55/webapp

tomcat pipeline to deploy war file on to the tomcat 

pipeline {
	agent any
	environment {
		PATH = "/opt/apache-maven-3.6.3/bin:$PATH"
	}
	stages {
		stage ("clone code") {
			steps{
				git credentialsId: 'git_credentials', url: '<github_url>'
			{
		}
		stage ("build code"){
			steps{
				sh "mvn clean install"
			}
		}
		stage ("deploy"){
			steps{
			  sshagent(['deploy_user']){
			sh "scp -o StrickHostkeyChecking=no <src_file> username@IP:<dest_path>"
			
				}
			}
		}
		
	}
 }


How to build and deploy image on to the DockerHub through jenkins pipeline??
step:-1
	log in to the dockerhub -> settings -> security -> assign the permissions -> generate access token 
step:- 2
	manage jenkins -> manage credentails -> give the username and password as access token, give the credentailsID (ex:- anil-hub-devops)
step:- 3
	create the pipeline job
	
	pipeline {
    agent any 
    environment {
    DOCKERHUB_CREDENTIALS = credentials('anil-hub-devops')
    }
    stages { 
        stage('SCM Checkout') {
            steps{
            git 'https://github.com/ravdy/nodejs-demo.git'
            }
        }

        stage('Build docker image') {
            steps {  
                sh 'docker build -t anil/nodeapp:$BUILD_NUMBER .'
            }
        }
        stage('login to dockerhub') {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('push image') {
            steps{
                sh 'docker push anil/nodeapp:$BUILD_NUMBER'
            }
        }
}
post {
        always {
            sh 'docker logout'
        }
    }
}

* $DOCKERHUB_CREDENTIALS_PSW { "retreiving only password" }
* --password-stdin { "whatever we are echoing that we are passing it as a password" }

Master and slave node configuration:
Manage Jenkins --> Manage nodes and clouds --> New node

Name: uniquely identifies an agent within this Jenkins installation
Description:
Number of executors: 2
Remote root directory: /home/ec2-user/maven-agent
Labels: Labels (or tags) are used to group multiple agents into one logical group.

launch the agent.jar on the slave node to connect with the Master jenkins

  echo "secret_key" > secret-file
  java -jar agent.jar -jnlpUrl http://<Jenkins_URL>/computer/abc/jenkins-agent.jnlp -secret @secret-file -workDir "/home/ec2-user" --> hit this command to connect
  master jenkiins
  
  while creating the job select the option like { Restrict where this project can be run } and give the label.

* Env variables
  BUILD_NUMBER, BUILD_ID, JOB_NAME, NODE_NAME, NODE_LABELS, WORKSPACE, BUILD_URL, JOB_URL.
  
* How to define the env variables in jenkins?
   manage jenkins -> configure system -> at global properties check the environment variables and add the variables

* How to define the env variables in jenkins pipeline ? 
  pipeline {
    environment {
        FNAME = "Naive"
        LNAME= "Skill"
    }
    agent any
    stages {
        stage('Hello') {
            steps {
                sh "echo Hello ${FNAME} ${LNAME}"
            }
        }
    }
}

* How to define the variables in jenkins pipeline ? 
  // Define variable
def myVariable = "anil"

// Print variable
pipeline {
  agent any
  stages {
    stage ("Print variable") {
      steps {
        echo "My variable is ${myVariable}"
      }
    }
  }
}

Jenkins interview questions and answers

1. How to add a user in Jenkins?
   go to manage jenkins -> manage users -> Click on Create User -> Enter all the details.
   
2. How to give privileges to the users
   install the plugin called Role based authorization strategy -> open configure global security -> select the option called Role-based strategy
   Manage and assign roles -> Manage Roles -> global roles ( you can create the Role called employee and assign the permissions, Project Roles 
   ( You can add the group of people like developers, testers and click on assign roles add the users to roles.
   
2. How to take back up and restore jenkins ?
   install thinbackup plugin
   create the directory as storage location for backups
   $ mkdir /apps/jenkins_backup
   $ chown jenkins:jenkins /apps/jenkins_backup
   manage jenkins -> Thinbackup -> settings
     under the settings define the dir for the storage location for backups
     schedule the time and select the options like { backup usercontent folder, move older backup to zip file, backup plugins archives }
     
3. How to copy the jenkins job from one container to another one ?
   when you install the jenkins it will create a default dir called .jenkins
   under .jenkins there are some folder like, plugins, jobs, users, war.
   go to jobs folder, there you will find all the jobs.
   before you copy from one server to another server first you need to do SSH connection between the server.
   scp -r <job-name> root@<pub-ip> <dest-dir>
   go to the target jenkins and manage jenkins -> "reload configuration from disk"
   
 4. How to change the default jenkins port ?
    go to the default jenkins file /etc/default/jenkins
    change the port in that file
    $ sudo service jenkins restart
    $ curl localhost:8090
    go to security port and allow 8090 port
    
 5. what are the steps included in jenkins pipeline?
    build, test, deploy, release
    
	








