 - Infrastructure as code (IaC) tools allow you to manage infrastructure with configuration files rather than through a graphical user interface. 
 - IaC allows you to build, change, and manage your infrastructure in a safe, consistent, and repeatable way by defining resource configurations 
   that you can version, reuse, and share.
 - declarative configuration files, and manages your infrastructure's lifecycle. 
 - Terraform's state allows you to track resource changes throughout your deployments.
 
   Initialize - Install the plugins Terraform needs to manage the infrastructure.
   Plan - Preview the changes Terraform will make to match your configuration.
   Apply - Make the planned changes.
   
 - terraform & ansible are client only architecture model which means no need to have master server.
 - chef, puppet are client server model which means master should be there
 
 * terraform.tfstate
    - The state is the data that Terraform has recorded about a workspace at a particular point in its lifecycle, usually after an apply. 
    
 * terraform.tfstate.backup
    - it will store the backup of the previous version of the execution, if screw the infrastructure we can backup from this file.
    
 * terraform show -> it shows the general information of the previous version of the data
 
 - export AWS_ACCESS_KEY_ID= "access key"
 - export AWS_SECRET_ACCESS_KEY= "secret key"
 
 - AWS CLI has to be configured to tarraform to be able to communicate with AWS
 
 * provider 
 
    provider "aws" {
       region = "us-east-1"
       access_key = "my-access-key"
       secret_key = "my-secret-key"
    }
  
  
  * instance creation
  
  resource "aws_instance" "web" {
  ami           = data.aws_ami.ubuntu.id  
  instance_type = "t3.micro"

  tags = {
    Name = "HelloWorld"
  }
}

* vpc creation 

resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"
  
  tags = {
    Name = "Main"
  }
}

* subnet creation

resource "aws_subnet" "main" {
  vpc_id = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"
  
  tags = {
    Name = "Main"
  }
}

* internet gateway creation

  resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id

  tags = {
    Name = "main"
  }
}







































   

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
